plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.11'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sfc.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.2")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

configurations.configureEach {
	resolutionStrategy {
		force 'mysql:mysql-connector-java:8.0.33'
	}
}

dependencies {
	// Spring Boot Web Starter for building RESTful APIs
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Data JPA for easy database interaction (ORM)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Mysql database
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'

	// Lombok for reducing boilerplate code like getters, setters, constructors
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Eureka Client for Service Discovery (to register with Eureka Server)
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Spring Cloud Config Client (to fetch configurations from Config Server)
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// Resilience4j for implementing Circuit Breaker pattern (fault tolerance)
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	// AOP Starter is required for @CircuitBreaker annotation to work
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Spring Boot Test Starter for writing unit and integration tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// SpringDoc OpenAPI / Swagger UI Dependency
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
